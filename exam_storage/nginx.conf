user root;
worker_processes 1;
include /etc/nginx/modules-enabled/*.conf;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    #tcp_nopush on;
    keepalive_timeout 65;
    #gzip on;
    # include /etc/nginx/conf.d/*.conf;

    upstream ziplist {
        server localhost:8082;
    }

    server {
        listen 8082;
        autoindex on;               # enable directory listing output
        autoindex_exact_size off;   # output file sizes rounded to kilobytes, megabytes, and gigabytes
        autoindex_localtime on;     # output local times in the directory
        autoindex_format json;      # list file in json

        location / {
            root /www/data/;

            add_header X-Archive-Files 'zip';

            # this line sets the name of the zip that the user gets
            add_header Content-Disposition 'attachment';
            access_by_lua_block {
                os.execute("python3 /www/scripts/create_zip.py " .. ngx.var.request_uri)
            }
        }
    }

    server {
        listen 80;
        listen [::]:80;
        root /www/data/;
        index index.php index.html index.htm;
        autoindex on;               # enable directory listing output
        autoindex_exact_size off;   # output file sizes rounded to kilobytes, megabytes, and gigabytes
        autoindex_localtime on;     # output local times in the directory
        autoindex_format json;      # list file in json
        # server_name localhost;

        client_body_temp_path /tmp/client_temp;
        client_max_body_size 10G;
        dav_methods PUT DELETE MKCOL COPY MOVE;
        dav_ext_methods PROPFIND OPTIONS;
        dav_access user:rw group:rw all:rw;
        create_full_put_path on;

        location /splinter/ {
            auth_basic "Splinter structures";
            auth_basic_user_file /etc/apache2/.htpasswd_splinter;
        }
        location /zip/ {

            auth_basic "Splinter structures";
            auth_basic_user_file /etc/apache2/.htpasswd_splinter;
            # hides the header to the user
            proxy_hide_header X-Archive-Files;

            # I don't remember if this is needed
            proxy_set_header Accept-Encoding "";

            # I don't know what this means
            proxy_pass_request_headers off;

            # pass the request to server B
            proxy_pass http://ziplist;
        }

        location /uploads/ {
            auth_basic "Webdav upload";
            auth_basic_user_file /etc/apache2/.htpasswd_webdav;
        }
    }
}
